openapi: 3.0.1
info:
  title: AlzaBox API v2
  description: "# Environments\r\n\r\n- Test IDM: https://identitymanagement.phx-test.alza.cz/\r\n- Prod IDM: https://identitymanagement.phoenix.alza.cz/\r\n- Test environment: https://parcellockersconnector-test.alza.cz/\r\n- Prod environemnt: https://parcellockersconnector.alza.cz/\r\n\r\nLast two URLs from the list above do not have any frontend.\r\nYou can call them only through API requests only.\r\nThese requests have to be authorized by token recieved from identity management in first two URLs (depending on the environment).\r\n[How to receive a token](#section/Introduction/Authorization)?\r\n\r\n## Authorization\r\n\r\nAuthorization is the same for every API method.\r\nAccess token, required for authorization, is generated by request to IDM.\r\nToken is valid for 60 minutes.\r\nIt is recommended to generate token before every request (including batch request).\r\nAuthorization requires login information: \r\n- `client_id`\r\n- `client_secret` \r\n- `username` \r\n- `password`\r\n\r\nLogin information is provided by Alza for both test and production environments.\r\n\r\n#### Request\r\n```\r\ncurl \r\n --location \r\n --request POST \"https://identitymanagement.phoenix.alza.cz/connect/token\" \r\n --header \"Accept: application/json\" \r\n --header \"Content-Type: application/x-www-form-urlencoded\" \r\n --data-urlencode \"grant_type=password\" \r\n --data-urlencode \"scope=konzole_access\" \r\n --data-urlencode \"client_id=xxxCLIENT_IDxxx\" \r\n --data-urlencode \"client_secret=xxxCLIENT_SECRETxxx\"\r\n --data-urlencode \"username=xxxPARTNERxxx\"\r\n --data-urlencode \"password=xxxPASSWORDxxx\"\r\n```\r\n\r\n#### Response\r\n\r\n```\r\n{\r\n    \"access_token\": \"eyJ...\",\r\n    \"expires_in\": 3600,\r\n    \"token_type\": \"Bearer\",\r\n    \"scope\": \"konzole_access\"\r\n}\r\n```\r\n\r\n# Reservation status callback\r\n\r\nWe call partner's endpoint for reservation status change not provided by partner via API. \r\nJson payload is sent with a reservation identification, \r\nnew status of the reservation and a changeTime of a change. \r\nChanges are sent in the same order as have been created. \r\nChanges are being sent several times in case of unsuccessful sending.\r\n\r\n## Technical detail\r\n\r\nPartner's endpoint url will be added to partner configuration. POST http method should be used, but we are able to config PATCH http method.\r\n\r\nWe support several partners' endpoint security options. We are able to just configure these options:\r\n\r\n- username and password (basic authorization)\r\n- static bearer token\r\n- static X-Token header\r\n- static Ocp-Apim-Subscription-Key header\r\n\r\nWe send these information in JSON body:\r\n\r\n- reservation identification (string)\r\n- new reservation status (string, one of possible states, see API documentation)\r\n- reservation change datetime (datetime in UTC)\r\n\r\n## Callback payload example\r\n```\r\n{\r\n    \"reservationId\": \"91fcb674-bfbc-4f88-9bef-9651874e8126\",\r\n    \"status\": \"PICKED_UP\",\r\n    \"changeTime\": \"2021-10-20T08:31:58.113Z\"\r\n}\r\n```\r\n\r\n# Commons\r\n\r\n### Locker parametrization \r\n\r\nThere are several parametrization options.\r\nSingle box can be found by using `filter[id]`.\r\nIn case no `filter[id]` is provided, information about all the boxes is returned.\r\nParameters provided in `fields[box]` specify information obtained in the response.\r\nWhen size of packages is provided by using `filter[package][height]`, `filter[package][width]`, `filter[package][depth]`, response specifies whether package will fit the box.\r\n\r\n| Parameter | Description |\r\n| --------- | ----------- |\r\n| filter[id]| Returns just specific box with defined id. |\r\n| fields[box] | Returns fields defined in query (see net table). |\r\n| filter[package][height] filter[package][depth] filter[package][width] | Returns information, whether package fits the box.\r\n\r\n## Response status codes\r\n\r\n| Code | Status       | Description                                     |\r\n| ---- |--------------|-------------------------------------------------|\r\n| 200 | Success      | Successful call with data in response           |\r\n| 400 | BadRequest   | Request has some issues                         | Package sizes must be provided! |\r\n| 401 | Unauthorized | Missing or invalid access token provided        |\r\n| 403 | Forbidden    | Token is valid but user has insufficient rights |\r\n| 404 | NotFound     | Box has not been found                          | Box with Id:1000 not found! |\r\n\r\n## Statuses of a reservation\r\n\r\n| Status         | Description |\r\n|----------------| ------- |\r\n| Canceled       |Canceled reservation|\r\n| Expired        |Automatically canceled reservation after expiration|\r\n| Reserved       |Valid reservation not yet stocked|\r\n| Incomplete     |Partially stocked or package did not fit the box|\r\n| Stocking       |Currently being filled into a box|\r\n| Stocked_Locked |Stocked, cannot be picked up by the customer|\r\n| Stocked        |Stocked, ready to be picked up by the customer|\r\n| Returning      |Will be picked up with the next driver login|\r\n| Returned       |Picked up by the driver|\r\n| Picked_Up      |Picked up by the customer|\r\n\r\n## Version history\r\n\r\n| Version| Description                                                                                                     |Date       |    Author       |\r\n|:-------|-----------------------------------------------------------------------------------------------------------------|-----------|-----------------|\r\n| `2.7.1`| Make clear that deliveryPin is always dynamic                                                                   |21.06.2022 |Michal Chroust   |\r\n| `2.7`  | CountryShortCode in GET BOX response                                                                            |16.06.2022 |Martin Matoušek  |\r\n| `2.6`  | Shipping list and carrier                                                                                       |08.06.2022 |Vladimír Žák     |\r\n| `2.5.1`| Partner's delivery PIN - documentation for dynamic partner PIN                                                  |05.04.2022 |Michal Chroust   |\r\n| `2.5`  | Callbacks - new documentation section about callbacks, which we provide for partners reservation status changes |30.03.2022 |Vladimír Žák     |\r\n| `2.4`  | Box occupancy - new box information about general occupancy in %                                                |09.03.2022 |Vladimír Žák     |\r\n| `2.3.4`| Required fields - minor changes in docs                                                                         |23.02.2022 |Přemysl Krajčovič|\r\n| `2.3.3`| Reservation type - possibility of defining reservation type added to post reservation endpoint                  |10.02.2022 |Alexander Lokaj  |\r\n| `2.3.2`| Status changes clarification - minor changes in docs, beter explanation of changing status                      |13.12.2021 |Vladimír Žák     |\r\n| `2.3.1`| New error message - minor changes in error messages                                                             |08.12.2021 |Vladimír Žák     |\r\n| `2.3`  | Payment data - information about payment data added to get reservation endpoint                                 |11.11.2021 |Vladimír Žák     |\r\n| `2.2`  | Box slots - information about slots types added to get boxes endpoint                                           |20.09.2021 |Vladimír Žák     |\r\n| `2.1`  | Carriers' passwords - information about carrier PIN added to get reservation endpoint                           |25.08.2021 |Vladimír Žák     |\r\n| `2.0`  | New connector - new API version via dedicated connector                                                         |06.08.2021 |Vladimír Žák     |   \r\n| `1.1`  | Updated version - minor updates                                                                                 |28.02.2021 |Alexander Lokaj  |\r\n| `1.0`  | Initial version - first version of documentation                                                                |26.05.2020 |Alexander Lokaj  |\r\n"
  contact:
    name: Alza.cz a.s.
    url: https://alza.cz
    email: erp_konzole2@alza.cz
  license:
    name: All rights reserved
  version: v2
paths:
  /parcel-lockers/v2/box:
    get:
      tags:
        - Boxes
      summary: Gets AlzaBox information
      parameters:
        - name: filter[id]
          in: query
          description: Id of a box
          schema:
            type: integer
            format: int32
        - name: filter[pid]
          in: query
          description: PId of a box
          schema:
            type: string
        - name: fields[box]
          in: query
          description: "Array of fields that should be returned\r\n(name, available, address, gps, description, openingHours, photos, slots, occupancy, deliveryPin)"
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxErrorResponseV2'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxErrorResponseV2'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxErrorResponseV2'
        '500':
          description: Server Error
      security:
        - oauth2: []
  /parcel-lockers/v2/boxes:
    get:
      tags:
        - Boxes
      summary: Gets AlzaBoxes information
      parameters:
        - name: fields[box]
          in: query
          description: "Array of fields that should be returned\r\n(name, available, address, gps, description, openingHours, photos, slots, occupancy, deliveryPin)"
          schema:
            type: array
            items:
              type: string
        - name: page[limit]
          in: query
          description: Page limit
          schema:
            type: integer
            format: int32
            default: 100
        - name: page[offset]
          in: query
          description: Page offset
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxesResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxesErrorResponseV2'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxesErrorResponseV2'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoxesErrorResponseV2'
        '500':
          description: Server Error
      security:
        - oauth2: []
  /parcel-lockers/v2/courier:
    get:
      tags:
        - Couriers
      summary: Gets courier
      parameters:
        - name: filter[login]
          in: query
          description: Courier's login
          schema:
            type: string
        - name: fields[courier]
          in: query
          description: Array of fields that should be returned
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCourierResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCourierErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCourierErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCourierErrorResponse'
        '500':
          description: Server Error
      security:
        - oauth2: []
    post:
      tags:
        - Couriers
      summary: Creates courier
      parameters:
        - name: fields[courier]
          in: query
          description: Array of fields that should be returned
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: Create courier input
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourierResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourierErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCourierErrorResponse'
        '500':
          description: Server Error
      security:
        - oauth2: []
    patch:
      tags:
        - Couriers
      summary: Updates courier
      parameters:
        - name: fields[courier]
          in: query
          description: Array of fields that should be returned
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: Update courier input
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateCourierBodyInput'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCourierResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCourierErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCourierErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCourierErrorResponse'
        '500':
          description: Server Error
      security:
        - oauth2: []
  /parcel-lockers/v2/couriers:
    get:
      tags:
        - Couriers
      summary: Gets couriers
      parameters:
        - name: page[limit]
          in: query
          description: Limit number of records
          schema:
            type: integer
            format: int32
            default: 100
        - name: page[offset]
          in: query
          description: Offset of records
          schema:
            type: integer
            format: int32
            default: 0
        - name: fields[courier]
          in: query
          description: Array of fields that should be returned
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCouriersResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCouriersErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCouriersErrorResponse'
        '500':
          description: Server Error
      security:
        - oauth2: []
  /parcel-lockers/v2/reservations:
    get:
      tags:
        - Reservations
      summary: Get all reservations that meet filter criteria
      parameters:
        - name: filter[status]
          in: query
          description: Status of reservations
          schema:
            type: string
        - name: filter[id]
          in: query
          description: Ids of reservations
          schema:
            type: array
            items:
              type: string
        - name: page[limit]
          in: query
          description: Page limit
          schema:
            type: integer
            format: int32
            default: 20
        - name: page[offset]
          in: query
          description: Page offset
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsErrorResponseV2'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsErrorResponseV2'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsErrorResponseV2'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationsErrorResponseV2'
        '500':
          description: Server Error
      security:
        - oauth2: []
  /parcel-lockers/v2/reservation:
    get:
      tags:
        - Reservations
      summary: Get one specific reservation by its id
      parameters:
        - name: filter[id]
          in: query
          description: Id of reservation
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationErrorResponseV2'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationErrorResponseV2'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationErrorResponseV2'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReservationErrorResponseV2'
        '500':
          description: Server Error
      security:
        - oauth2: []
    post:
      tags:
        - Reservations
      summary: Create new reservation
      requestBody:
        description: Reservation information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReservationInputV2'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReservationResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReservationErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReservationErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReservationErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReservationErrorResponse'
        '500':
          description: Server Error
      security:
        - oauth2: []
    patch:
      tags:
        - Reservations
      summary: Update reservation
      requestBody:
        description: Update information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReservationInputV2'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReservationResponseV2'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReservationErrorResponseV2'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReservationErrorResponseV2'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReservationErrorResponseV2'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReservationErrorResponseV2'
        '500':
          description: Server Error
      security:
        - oauth2: []
components:
  schemas:
    AddressResponse:
      type: object
      properties:
        streetWithNumber:
          type: string
          description: Street with number
          nullable: true
        city:
          type: string
          description: City
          nullable: true
        zip:
          type: string
          description: Zip code
          nullable: true
        countryShortCode:
          type: string
          description: "Country short code (alpha2 - SK, DE, BG, ...)\r\nISO 3166-1 alpha2"
          nullable: true
      additionalProperties: false
      description: Response Address of a box
    AlzaBoxAttributesResponseV2:
      type: object
      properties:
        name:
          type: string
          description: Name of a box
          nullable: true
        available:
          type: boolean
          description: Is box available
          nullable: true
        address:
          $ref: '#/components/schemas/AddressResponse'
        gps:
          $ref: '#/components/schemas/GpsResponse'
        description:
          type: string
          description: Description of placement
          nullable: true
        photos:
          $ref: '#/components/schemas/PhotosResponse'
        openingHours:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursResponseItem'
          description: Opening hours of AlzaBox
          nullable: true
        slots:
          type: array
          items:
            $ref: '#/components/schemas/SlotTypeStatResponseItem'
          description: Slot types statistics
          nullable: true
        occupancy:
          type: number
          description: AlzaBox occupancy in %
          format: double
          nullable: true
        deliveryPin:
          type: string
          description: Delivery Pin code for a day
          nullable: true
      additionalProperties: false
      description: Response for alzabox additional attributes
    AlzaBoxResponseItemV2:
      type: object
      properties:
        id:
          type: integer
          description: Id of a box
          format: int32
        pid:
          type: string
          description: Partner Id of a box
          nullable: true
        attributes:
          $ref: '#/components/schemas/AlzaBoxAttributesResponseV2'
      additionalProperties: false
      description: Response information about AlzaBox
    CourierResponseAttributes:
      type: object
      properties:
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/CourierResponseBox'
          description: Boxes to which courier has access
          nullable: true
      additionalProperties: false
      description: Courier response attributes
    CourierResponseBox:
      type: object
      properties:
        id:
          type: integer
          description: Id of a box
          format: int32
        pid:
          type: string
          description: Partner Id of box
          nullable: true
      additionalProperties: false
      description: Courier response AlzaBox
    CourierResponseItem:
      type: object
      properties:
        login:
          type: string
          description: Login of the courier
        pin:
          type: string
          description: Pin for AlzaBox access
          nullable: true
        attributes:
          $ref: '#/components/schemas/CourierResponseAttributes'
      additionalProperties: false
      description: Courier response
    CreateCourierErrorResponse:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for CreateCourier endpoint
    CreateCourierResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CourierResponseItem'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for CreateCourier endpoint
    CreateOrUpdateCourierBodyInput:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateOrUpdateCourierData'
      additionalProperties: false
      description: Input for CreateCourier or UpdateCourier endpoint
    CreateOrUpdateCourierBox:
      type: object
      properties:
        id:
          type: integer
          description: AlzaBox Id
          format: int32
          nullable: true
        pid:
          type: string
          description: AlzaBox Partner Id
          nullable: true
      additionalProperties: false
      description: Box access for courier creation or update
    CreateOrUpdateCourierData:
      type: object
      properties:
        courier:
          $ref: '#/components/schemas/CreateOrUpdateCourierItem'
      additionalProperties: false
      description: Data of a courier
    CreateOrUpdateCourierItem:
      type: object
      properties:
        login:
          type: string
          description: Login of the courier
        pin:
          type: string
          description: Pin for AlzaBox access
          nullable: true
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrUpdateCourierBox'
          description: AlzaBoxes to which courier has access
          nullable: true
      additionalProperties: false
      description: Courier data
    CreateReservationAttributesV2:
      type: object
      properties:
        pin:
          type: number
          description: Customer PIN generated by partner
          nullable: true
          example: 123456
        expirationDate:
          type: string
          description: Expiration date in UTC
          format: date-time
          nullable: true
        startReservationDate:
          type: string
          description: Start reservation date in UTC
          format: date-time
          nullable: true
        packages:
          type: array
          items:
            $ref: '#/components/schemas/CreateReservationPackageV2'
          description: Packages
        paymentData:
          $ref: '#/components/schemas/ReservationPaymentData'
        type:
          type: string
          description: Type of reservation
          nullable: true
      additionalProperties: false
      description: Attributes of a reservation
    CreateReservationBoxV2:
      type: object
      properties:
        id:
          type: integer
          description: Id of a box
          format: int32
          nullable: true
        pid:
          type: string
          description: Partner Id of AlzaBox
          nullable: true
      additionalProperties: false
      description: Class used for specifying in which AlzaBox reservation should be created
    CreateReservationDataV2:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/CreateReservationItemV2'
      additionalProperties: false
      description: Data for creating reservation in AlzaBox
    CreateReservationErrorResponse:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for create reservation endpoint
    CreateReservationInputV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateReservationDataV2'
      additionalProperties: false
      description: Input for creating reservation in AlzaBox
    CreateReservationItemV2:
      type: object
      properties:
        id:
          type: string
          description: Id of a reservation
        attributes:
          $ref: '#/components/schemas/CreateReservationAttributesV2'
        relationships:
          $ref: '#/components/schemas/CreateReservationRelationshipsV2'
      additionalProperties: false
      description: Data for creating reservation in AlzaBox
    CreateReservationPackageV2:
      type: object
      properties:
        depth:
          type: number
          description: Depth of a package
          format: double
        height:
          type: number
          description: Height of a package
          format: double
        width:
          type: number
          description: Width of a package
          format: double
        barcode:
          type: string
          description: Barcode
      additionalProperties: false
      description: AlzaBoxPackage representation for partners
    CreateReservationRelationshipsV2:
      type: object
      properties:
        box:
          $ref: '#/components/schemas/CreateReservationBoxV2'
      additionalProperties: false
      description: Relationships of a reservation
    CreateReservationResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReservationResponseItemV2'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for create reservation endpoint
    ErrorResponseExtension:
      type: object
      properties:
        code:
          type: string
          description: Code of status error
          nullable: true
        translation:
          description: Translation object
          default: null
          nullable: true
      additionalProperties: false
      description: Response error extension
    ErrorResponseItem:
      type: object
      properties:
        message:
          type: string
          description: Message
          nullable: true
        locations:
          type: array
          items:
            type: string
          description: Locations
          default: null
          nullable: true
        path:
          type: array
          items:
            type: string
          description: Path
          default: null
          nullable: true
        extensions:
          $ref: '#/components/schemas/ErrorResponseExtension'
      additionalProperties: false
      description: Response error
    GetBoxErrorResponseV2:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for get box endpoint
    GetBoxResponseDataV2:
      type: object
      properties:
        box:
          $ref: '#/components/schemas/AlzaBoxResponseItemV2'
      additionalProperties: false
      description: Response for GetBox endpoint
    GetBoxResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetBoxResponseDataV2'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for get boxes endpoint
    GetBoxesErrorResponseV2:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for get boxes endpoint
    GetBoxesResponseDataV2:
      type: object
      properties:
        boxes:
          type: array
          items:
            $ref: '#/components/schemas/AlzaBoxResponseItemV2'
          description: AlzaBoxes information
      additionalProperties: false
      description: Useful data in get boxes reponse
    GetBoxesResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetBoxesResponseDataV2'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for get boxes endpoint
    GetCourierErrorResponse:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for GetCourier endpoint
    GetCourierResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetCourierResponseData'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for GetCourier endpoint
    GetCourierResponseData:
      type: object
      properties:
        courier:
          $ref: '#/components/schemas/CourierResponseItem'
      additionalProperties: false
      description: Data of GetCourier Response
    GetCouriersErrorResponse:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for GetCourier endpoint
    GetCouriersResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetCouriersResponseData'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for GetCouriers endpoint
    GetCouriersResponseData:
      type: object
      properties:
        couriers:
          type: array
          items:
            $ref: '#/components/schemas/CourierResponseItem'
          description: Couriers information
      additionalProperties: false
      description: ResponseData for GetCouriers endpoint
    GetReservationErrorResponseV2:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for getting one specific reservation
    GetReservationResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReservationResponseDataV2'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for getting one specific reservation
    GetReservationsErrorResponseV2:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for get reservations endpoint
    GetReservationsResponseDataV2:
      type: object
      properties:
        reservations:
          type: array
          items:
            $ref: '#/components/schemas/ReservationResponseItemV2'
          description: Reservations that match filter criteria
      additionalProperties: false
      description: Reservations found based on filter criteria
    GetReservationsResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetReservationsResponseDataV2'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for getting multiple reservations
    GpsResponse:
      type: object
      properties:
        lat:
          type: number
          description: Latitude
          format: float
        lng:
          type: number
          description: Longitude
          format: float
      additionalProperties: false
      description: Gps coordinates
    OpeningHoursResponseItem:
      type: object
      properties:
        day:
          type: string
          description: Day of week
          nullable: true
        open:
          type: string
          description: Open time
          nullable: true
        close:
          type: string
          description: Close time
          nullable: true
      additionalProperties: false
      description: Response information about opening hours of AlzaBox
    PhotosResponse:
      type: object
      properties:
        main:
          type: string
          description: Url of main photo of AlzaBox
          nullable: true
        additional:
          type: array
          items:
            type: string
          description: Urls of additional photos of AlzaBox
          nullable: true
      additionalProperties: false
      description: Response information about photos of AlzaBox
    ReservationAlzaBoxResponseV2:
      type: object
      properties:
        id:
          type: integer
          description: Id of a box
          format: int32
        pid:
          type: string
          description: >-
            Partner ID of Box - identifier of box specific for partner and set
            by partner
          nullable: true
      additionalProperties: false
      description: Information about AlzaBox used in reservation management results
    ReservationAttributesResponseV2:
      type: object
      properties:
        status:
          type: string
          description: Status of a reservation
          nullable: true
        createdAt:
          type: string
          description: Created at in UTC
          format: date-time
          nullable: true
        expirationDate:
          type: string
          description: Expiration date in UTC
          format: date-time
          nullable: true
        startReservationDate:
          type: string
          description: Start reservation date in UTC
          format: date-time
          nullable: true
        packages:
          type: array
          items:
            $ref: '#/components/schemas/ReservationPackageResponseItemV2'
          description: Packages
        paymentData:
          $ref: '#/components/schemas/ReservationPaymentDataResponse'
        pin:
          type: string
          description: Pin
          nullable: true
        type:
          type: string
          description: Reservation type
          nullable: true
      additionalProperties: false
      description: Attributes of reservation
    ReservationPackageResponseItemV2:
      type: object
      properties:
        depth:
          type: number
          description: Depth of a package
          format: double
        height:
          type: number
          description: Height of a package
          format: double
        width:
          type: number
          description: Width of a package
          format: double
        barcode:
          type: string
          description: Barcode
          nullable: true
        packageState:
          type: string
          description: State of a package
          nullable: true
      additionalProperties: false
      description: Package information response
    ReservationPaymentData:
      type: object
      properties:
        price:
          type: number
          description: Price of reservation
          format: double
        currency:
          type: string
          description: Currency of price
          nullable: true
        variableSymbol:
          type: string
          description: Variable symbol of payment
          nullable: true
      additionalProperties: false
      description: Payment data for reservation
    ReservationPaymentDataResponse:
      type: object
      properties:
        price:
          type: number
          description: Price of reservation
          format: double
        currency:
          type: string
          description: Currency
          nullable: true
        variableSymbol:
          type: string
          description: Variable symbol
          nullable: true
      additionalProperties: false
      description: Reservation payment data
    ReservationRelationshipsResponseV2:
      type: object
      properties:
        box:
          $ref: '#/components/schemas/ReservationAlzaBoxResponseV2'
      additionalProperties: false
      description: Reservation relationships response
    ReservationResponseDataV2:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/ReservationResponseItemV2'
      additionalProperties: false
      description: Reservation found by specific id
    ReservationResponseItemV2:
      type: object
      properties:
        id:
          type: string
          description: Id of a reservation
          nullable: true
        attributes:
          $ref: '#/components/schemas/ReservationAttributesResponseV2'
        relationships:
          $ref: '#/components/schemas/ReservationRelationshipsResponseV2'
      additionalProperties: false
      description: Reservation response item
    SlotTypeStatResponseItem:
      type: object
      properties:
        depth:
          type: number
          description: Depth of slot
          format: double
        height:
          type: number
          description: Height of slot
          format: double
        width:
          type: number
          description: Width of slot
          format: double
        count:
          type: integer
          description: Count of slots of given type
          format: int32
        type:
          type: string
          description: Type name
          nullable: true
        slotId:
          type: integer
          description: Slot type id
          format: int32
      additionalProperties: false
      description: Slot types
    UpdateCourierErrorResponse:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for UpdateCourier endpoint
    UpdateCourierResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CourierResponseItem'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for UpdateCourier endpoint
    UpdateReservationAttributesV2:
      type: object
      properties:
        status:
          type: string
          description: Status of a reservation
          nullable: true
        expirationDate:
          type: string
          description: Expiration date
          format: date-time
          nullable: true
        packages:
          type: array
          items:
            $ref: '#/components/schemas/UpdateReservationPackageV2'
          description: Packages
          nullable: true
        paymentData:
          $ref: '#/components/schemas/ReservationPaymentData'
      additionalProperties: false
      description: Attributes of reservation to update
    UpdateReservationDataV2:
      type: object
      properties:
        reservation:
          $ref: '#/components/schemas/UpdateReservationItemV2'
      additionalProperties: false
      description: Update reservation data
    UpdateReservationErrorResponseV2:
      type: object
      properties:
        data:
          description: Data placeholder
          default: null
          nullable: true
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          nullable: true
      additionalProperties: false
      description: Error response for update reservation
    UpdateReservationInputV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UpdateReservationDataV2'
      additionalProperties: false
      description: Input for a reservation updating
    UpdateReservationItemV2:
      type: object
      properties:
        id:
          type: string
          description: Id of a reservation
          nullable: true
        attributes:
          $ref: '#/components/schemas/UpdateReservationAttributesV2'
      additionalProperties: false
      description: Reservation information to update
    UpdateReservationPackageV2:
      type: object
      properties:
        depth:
          type: number
          description: Depth of a package
          format: double
          nullable: true
        height:
          type: number
          description: Height of a package
          format: double
          nullable: true
        width:
          type: number
          description: Width of a package
          format: double
          nullable: true
        barcode:
          type: string
          description: Barcode of a package
          nullable: true
      additionalProperties: false
      description: Package information for updating a reservation
    UpdateReservationResponseV2:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReservationResponseItemV2'
        metadata:
          description: Metadata information
          default: null
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResponseItem'
          description: Errors information
          default: null
          nullable: true
      additionalProperties: false
      description: Response for update reservation
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://identitymanagement.phx-dev.alz.lcl/connect/token
          scopes:
            konzole_access: Konzole API
tags:
  - name: Boxes
    description: Controller for boxes management
  - name: Couriers
    description: Controller for couriers management
  - name: Reservations
    description: Controller for AlzaBox reservations management
