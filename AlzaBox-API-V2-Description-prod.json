{
  "openapi": "3.0.1",
  "info": {
    "title": "Parcel Lockers Connector",
    "description": "Connector between partners and AlzaBoxes' ecosystem.",
    "contact": {
      "name": "Alza.cz a.s.",
      "url": "https://alza.cz",
      "email": "erp_konzole2@alza.cz"
    },
    "license": {
      "name": "All rights reserved"
    },
    "version": "v1"
  },
  "paths": {
    "/api/graphql": {
      "post": {
        "tags": [
          "GraphQL"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GraphQLQuery"
                  }
                ]
              }
            },
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GraphQLQuery"
                  }
                ]
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GraphQLQuery"
                  }
                ]
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GraphQLQuery"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/healthz": {
      "get": {
        "tags": [
          "Healthz"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/metrics": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/parcel-lockers/v1/box": {
      "get": {
        "tags": [
          "ParcelLockers"
        ],
        "summary": "Gets AlzaBoxes information with additional information about fitting packages",
        "parameters": [
          {
            "name": "filter[id]",
            "in": "query",
            "description": "Id of a box",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "filter[package][width]",
            "in": "query",
            "description": "Array of package widths in centimeters. \r\nFunctionality should not be used because of performance problems",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "deprecated": true
            }
          },
          {
            "name": "filter[package][height]",
            "in": "query",
            "description": "Array of package heights in centimeters. \r\nFunctionality should not be used because of performance problems",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "deprecated": true
            }
          },
          {
            "name": "filter[package][depth]",
            "in": "query",
            "description": "Array of package depths in centimeters. \r\nFunctionality should not be used because of performance problems",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              },
              "deprecated": true
            }
          },
          {
            "name": "fields[box]",
            "in": "query",
            "description": "Array of fields that should be returned\r\n(name, available, address, gps, description, photos, openingHours, slots, occupancy, deliveryPin)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoxesResponseV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoxesErrorResponseV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoxesErrorResponseV1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoxesErrorResponseV1"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/parcel-lockers/v1/reservation": {
      "get": {
        "tags": [
          "ParcelLockers"
        ],
        "summary": "Finds all reservations",
        "parameters": [
          {
            "name": "filter[status]",
            "in": "query",
            "description": "Status of a reservation, possible values: EXPIRED, CANCELED, NEW, PRERESERVED, RESERVED, INCOMPLETE, STOCKING, STOCKED_LOCKED, STOCKED, RETURNING, RETURNED, PICKED_UP",
            "schema": {
              "type": "string",
              "example": "STOCKED"
            },
            "example": "STOCKED"
          },
          {
            "name": "filter[id]",
            "in": "query",
            "description": "Ids of reservations",
            "schema": {
              "maxItems": 100,
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "RES1",
                "RES2",
                "RES3"
              ]
            },
            "example": [
              "RES1",
              "RES2",
              "RES3"
            ]
          },
          {
            "name": "page[limit]",
            "in": "query",
            "description": "Page limit",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "page[offset]",
            "in": "query",
            "description": "Page offset",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "fields[reservation]",
            "in": "query",
            "description": "Array of fields that should be returned.\r\nSupported values: No supported values in v1 yet",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReservationsErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ParcelLockers"
        ],
        "summary": "Creates new reservation",
        "parameters": [
          {
            "name": "fields[reservation]",
            "in": "query",
            "description": "Array of fields that should be returned.\r\nSupported values: No supported values in v1 yet",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Create information",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateReservationBodyInputV1"
                  }
                ],
                "description": "Reservation create input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ParcelLockers"
        ],
        "summary": "Updates reservation according to its state",
        "parameters": [
          {
            "name": "fields[reservation]",
            "in": "query",
            "description": "Array of fields that should be returned.\r\nSupported values: No supported values in v1 yet",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "description": "Update information",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateReservationBodyInputV1"
                  }
                ],
                "description": "Input for a reservation updating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReservationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReservationErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReservationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReservationErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReservationErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/parcel-lockers/v1/boxes/seznam/feed": {
      "get": {
        "tags": [
          "ParcelLockersFeed"
        ],
        "summary": "Gets AlzaBoxes feed for Seznam.cz",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlzaBoxesSeznamFeedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlzaBoxesSeznamFeedErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlzaBoxesSeznamFeedErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlzaBoxesSeznamFeedErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/readiness": {
      "get": {
        "tags": [
          "Readiness"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/serviceinfo/about": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/serviceinfo/versions": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/serviceinfo/settings": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/serviceinfo/environment-variable/{variable}": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "parameters": [
          {
            "name": "variable",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/serviceinfo/configuration-variable/{variable}": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "parameters": [
          {
            "name": "variable",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/serviceinfo/headers": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    },
    "/api/serviceinfo/userinfo": {
      "get": {
        "tags": [
          "ServiceInfo"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AddressResponse": {
        "type": "object",
        "properties": {
          "streetWithNumber": {
            "maxLength": 500,
            "type": "string",
            "description": "Street with number",
            "nullable": true,
            "example": "Starokolínská 1020/5"
          },
          "city": {
            "maxLength": 500,
            "type": "string",
            "description": "City",
            "nullable": true,
            "example": "Praha 21"
          },
          "zip": {
            "maxLength": 20,
            "type": "string",
            "description": "Zip code",
            "nullable": true,
            "example": "19016"
          },
          "countryShortCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Country short code (alpha2 - SK, DE, BG, ...)\r\nISO 3166-1 alpha2",
            "nullable": true,
            "example": "CZ"
          }
        },
        "additionalProperties": false,
        "description": "Response Address of a box"
      },
      "AlzaBoxAttributesResponseV1": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "Name of a box",
            "nullable": true
          },
          "available": {
            "type": "boolean",
            "description": "Is box available",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddressResponse"
              }
            ],
            "description": "Address of AlzaBox",
            "nullable": true
          },
          "gps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GpsResponse"
              }
            ],
            "description": "GPS information",
            "nullable": true
          },
          "fittingPackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageResponseItem"
            },
            "description": "Packages which fit into AlzaBox",
            "nullable": true,
            "deprecated": true
          },
          "tooLargePackages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageResponseItem"
            },
            "description": "Packages which are too large for AlzaBox",
            "nullable": true,
            "deprecated": true
          },
          "requiredSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequiredSlotResponseItem"
            },
            "description": "Required slots for packages",
            "nullable": true,
            "deprecated": true
          },
          "unavailableReason": {
            "type": "string",
            "description": "Reason of fitting fail",
            "nullable": true,
            "deprecated": true
          },
          "description": {
            "type": "string",
            "description": "Description of placement",
            "nullable": true
          },
          "photos": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhotosResponse"
              }
            ],
            "description": "Photos of AlzaBox",
            "nullable": true
          },
          "openingHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OpeningHoursResponseItem"
            },
            "description": "Opening hours of AlzaBox",
            "nullable": true
          },
          "slots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SlotTypeStatResponseItem"
            },
            "description": "Slot types statistics",
            "nullable": true
          },
          "occupancy": {
            "type": "number",
            "description": "AlzaBox occupancy",
            "format": "double",
            "nullable": true
          },
          "deliveryPin": {
            "type": "string",
            "description": "Delivery Pin code for a day",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for alzabox additional attributes"
      },
      "AlzaBoxResponseItemV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of a box",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type of a box",
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlzaBoxAttributesResponseV1"
              }
            ],
            "description": "Attributes of a box",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response information about AlzaBox"
      },
      "AlzaBoxSeznamFeedAddress": {
        "type": "object",
        "properties": {
          "street": {
            "maxLength": 500,
            "type": "string",
            "description": "Street with number"
          },
          "city": {
            "maxLength": 500,
            "type": "string",
            "description": "City"
          },
          "zip": {
            "maxLength": 20,
            "type": "string",
            "description": "Zip code"
          },
          "openingHours": {
            "type": "string",
            "description": "Openning hours"
          },
          "gps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlzaBoxSeznamFeedGps"
              }
            ],
            "description": "Gps coordinates",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Alza box feed address"
      },
      "AlzaBoxSeznamFeedGps": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Lat",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Long",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Alza box feed gps"
      },
      "AlzaBoxSeznamFeedPremise": {
        "type": "object",
        "properties": {
          "ic": {
            "type": "integer",
            "description": "Company ICO",
            "format": "int32",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "description": "Premise's id"
          },
          "name": {
            "maxLength": 100,
            "type": "string",
            "description": "Name"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "url": {
            "type": "string",
            "description": "Url"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlzaBoxSeznamFeedAddress"
              }
            ],
            "description": "Address",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response for item from get feed endpoint"
      },
      "AlzaBoxesSeznamFeedErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data placeholder",
            "default": null,
            "nullable": true
          },
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Error response for get feed endpoint"
      },
      "AlzaBoxesSeznamFeedResponse": {
        "type": "object",
        "properties": {
          "exportDate": {
            "type": "string",
            "description": "Export date in UTC",
            "format": "date-time"
          },
          "premises": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlzaBoxSeznamFeedPremise"
            },
            "description": "The array of premises"
          }
        },
        "additionalProperties": false,
        "description": "Response for get feed endpoint"
      },
      "CreateReservationAttributes": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of a reservation",
            "deprecated": true
          },
          "created_at": {
            "type": "string",
            "description": "DateTime of creation in UTC",
            "format": "date-time",
            "nullable": true,
            "deprecated": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date in UTC",
            "format": "date-time",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateReservationPackage"
            },
            "description": "Packages"
          },
          "pin": {
            "maxLength": 10,
            "type": "string",
            "description": "Pin",
            "deprecated": true
          },
          "paymentData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPaymentData"
              }
            ],
            "description": "Reservation payment data",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of reservation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Attributes of a reservation"
      },
      "CreateReservationBodyInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationData"
              }
            ],
            "description": "Data of a reservation"
          }
        },
        "additionalProperties": false,
        "description": "Reservation create input"
      },
      "CreateReservationBox": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of a box",
            "format": "int32",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "description": "Id of a branch",
            "format": "int32",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Box"
      },
      "CreateReservationData": {
        "type": "object",
        "properties": {
          "reservation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationItem"
              }
            ],
            "description": "Reservation"
          }
        },
        "additionalProperties": false,
        "description": "Data of a reservation"
      },
      "CreateReservationErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data placeholder",
            "default": null,
            "nullable": true
          },
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Error response for create reservation endpoint"
      },
      "CreateReservationItem": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "type": "string",
            "description": "Id of a reservation"
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationAttributes"
              }
            ],
            "description": "Reservation's attributes"
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationRelationships"
              }
            ],
            "description": "Reservation's relationships"
          }
        },
        "additionalProperties": false,
        "description": "AlzaBoxReservation representation for partners"
      },
      "CreateReservationPackage": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "number",
            "description": "Depth of a package in centimeters",
            "format": "double"
          },
          "height": {
            "type": "number",
            "description": "Height of a package in centimeters",
            "format": "double"
          },
          "width": {
            "type": "number",
            "description": "Width of a package in centimeters",
            "format": "double"
          },
          "barCode": {
            "maxLength": 200,
            "type": "string",
            "description": "Barcode"
          },
          "packageState": {
            "type": "string",
            "description": "State of a package",
            "deprecated": true
          },
          "shippingList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPackageShippingList"
              }
            ],
            "description": "Shipping list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AlzaBoxPackage representation for partners"
      },
      "CreateReservationRelationships": {
        "type": "object",
        "properties": {
          "box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CreateReservationBox"
              }
            ],
            "description": "Box"
          }
        },
        "additionalProperties": false,
        "description": "Relationships of a reservation"
      },
      "CreateReservationResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "default": null,
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationResponseItem"
              }
            ],
            "description": "Useful data"
          }
        },
        "additionalProperties": false,
        "description": "Response for create reservation endpoint"
      },
      "ErrorResponseExtension": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code of status error",
            "nullable": true
          },
          "translation": {
            "description": "Translation object",
            "default": null,
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response error extension"
      },
      "ErrorResponseItem": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message",
            "nullable": true
          },
          "messageCode": {
            "type": "string",
            "description": "Computer readable message code",
            "nullable": true
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Locations",
            "default": null,
            "nullable": true
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Path",
            "default": null,
            "nullable": true
          },
          "extensions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorResponseExtension"
              }
            ],
            "description": "Extensions",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response error"
      },
      "GetBoxesErrorResponseV1": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data placeholder",
            "default": null,
            "nullable": true
          },
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Error response for get boxes endpoint"
      },
      "GetBoxesResponseV1": {
        "type": "object",
        "properties": {
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "default": null,
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AlzaBoxResponseItemV1"
            },
            "description": "Data"
          }
        },
        "additionalProperties": false,
        "description": "Response for get boxes endpoint"
      },
      "GetReservationsErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data placeholder",
            "default": null,
            "nullable": true
          },
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Error response for get reservations endpoint"
      },
      "GetReservationsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "default": null,
            "nullable": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationResponseItem"
            },
            "description": "Data"
          }
        },
        "additionalProperties": false,
        "description": "Response for get reservations endpoint"
      },
      "GpsResponse": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "format": "float",
            "example": 50.078148
          },
          "lng": {
            "type": "number",
            "description": "Longitude",
            "format": "float",
            "example": 14.648324
          }
        },
        "additionalProperties": false,
        "description": "Gps coordinates"
      },
      "GraphQLQuery": {
        "type": "object",
        "properties": {
          "operationName": {
            "type": "string",
            "nullable": true
          },
          "namedQuery": {
            "type": "string",
            "nullable": true
          },
          "query": {
            "type": "string",
            "nullable": true
          },
          "variables": {
            "nullable": true
          },
          "parameters": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OpeningHoursResponseItem": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "description": "Day of week",
            "nullable": true,
            "example": "TUESDAY"
          },
          "open": {
            "type": "string",
            "description": "Open time",
            "nullable": true,
            "example": "00:00:00"
          },
          "close": {
            "type": "string",
            "description": "Close time",
            "nullable": true,
            "example": "23:59:59"
          }
        },
        "additionalProperties": false,
        "description": "Response information about opening hours of AlzaBox"
      },
      "PackageResponseItem": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "number",
            "description": "Depth of a package in centimeters",
            "format": "double",
            "nullable": true
          },
          "height": {
            "type": "number",
            "description": "Height of a package in centimeters",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "description": "Width of a package in centimeters",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response information about package"
      },
      "PhotosResponse": {
        "type": "object",
        "properties": {
          "main": {
            "type": "string",
            "description": "Url of main photo of AlzaBox",
            "nullable": true,
            "example": "https://i.alza.cz/foto/ImgGalery/boxyaprodejny/main/803.jpg"
          },
          "additional": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Urls of additional photos of AlzaBox",
            "nullable": true,
            "example": [
              "https://i.alza.cz/foto/ImgGalery/boxyaprodejny/main/804.jpg",
              "https://i.alza.cz/foto/ImgGalery/boxyaprodejny/main/805.jpg"
            ]
          }
        },
        "additionalProperties": false,
        "description": "Response information about photos of AlzaBox"
      },
      "RequiredSlotResponseItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "description": "Type of slot",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Number of slots",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total number of slots",
            "format": "int32"
          },
          "availableCount": {
            "type": "integer",
            "description": "Available number of slots",
            "format": "int32"
          },
          "maxCount": {
            "type": "integer",
            "description": "Max number of slots",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Response information about required slot"
      },
      "ReservationAlzaBoxResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of a box",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "Type of a box",
            "readOnly": true
          },
          "branchId": {
            "type": "integer",
            "description": "AlzaBox Branch Id\r\nObsolete",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Response information about alzabox in parcel"
      },
      "ReservationAttributesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of a reservation",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "DateTime of creation in UTC",
            "format": "date-time",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date in UTC",
            "format": "date-time",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReservationPackageResponseItem"
            },
            "description": "Packages"
          },
          "paymentData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPaymentDataResponse"
              }
            ],
            "description": "Payment information",
            "nullable": true
          },
          "pin": {
            "maxLength": 10,
            "type": "string",
            "description": "Pin",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Reservation type",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Attributes of reservation"
      },
      "ReservationPackageResponseItem": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "number",
            "description": "Depth of a package in centimeters",
            "format": "double"
          },
          "height": {
            "type": "number",
            "description": "Height of a package in centimeters",
            "format": "double"
          },
          "width": {
            "type": "number",
            "description": "Width of a package in centimeters",
            "format": "double"
          },
          "barCode": {
            "maxLength": 200,
            "type": "string",
            "description": "Barcode",
            "nullable": true
          },
          "packageState": {
            "type": "string",
            "description": "State of a package",
            "nullable": true
          },
          "shippingList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPackageShippingListResponse"
              }
            ],
            "description": "Shipping list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Package information response"
      },
      "ReservationPackageShippingCarrier": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "Name",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AlzaBoxPackageShippingCarrier representation for partners"
      },
      "ReservationPackageShippingCarrierResponse": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 50,
            "type": "string",
            "description": "Carrier name",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Carrier time password",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Package shipping carrier information response"
      },
      "ReservationPackageShippingList": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string",
            "description": "Shipping list key",
            "nullable": true
          },
          "carrier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPackageShippingCarrier"
              }
            ],
            "description": "Carrier",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "AlzaBoxPackageShippingList representation for partners"
      },
      "ReservationPackageShippingListResponse": {
        "type": "object",
        "properties": {
          "key": {
            "maxLength": 30,
            "type": "string",
            "description": "Shipping list key",
            "nullable": true
          },
          "carrier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPackageShippingCarrierResponse"
              }
            ],
            "description": "Carrier",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Package shipping information response"
      },
      "ReservationPaymentData": {
        "type": "object",
        "properties": {
          "price": {
            "minimum": 0,
            "type": "number",
            "description": "Price of reservation",
            "format": "double",
            "example": 123.99
          },
          "currency": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency of price",
            "nullable": true,
            "example": "CZK"
          },
          "variableSymbol": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Variable symbol of payment",
            "nullable": true,
            "example": "123456"
          },
          "paymentState": {
            "type": "string",
            "description": "Payment state, possible values: DO_NOT_PAY, TO_PAY, PAID",
            "example": "TO_PAY"
          }
        },
        "additionalProperties": false,
        "description": "Payment data for reservation"
      },
      "ReservationPaymentDataResponse": {
        "type": "object",
        "properties": {
          "price": {
            "minimum": 0,
            "type": "number",
            "description": "Price of reservation",
            "format": "double",
            "example": 123.99
          },
          "currency": {
            "maxLength": 3,
            "type": "string",
            "description": "Currency",
            "nullable": true,
            "example": "CZK"
          },
          "variableSymbol": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Variable symbol",
            "nullable": true,
            "example": "123456"
          },
          "paymentState": {
            "type": "string",
            "description": "Payment state, possible values: DO_NOT_PAY, TO_PAY, PAID",
            "example": "TO_PAY"
          }
        },
        "additionalProperties": false,
        "description": "Reservation payment data"
      },
      "ReservationRelationshipsResponse": {
        "type": "object",
        "properties": {
          "box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationAlzaBoxResponse"
              }
            ],
            "description": "AlzaBox information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Reservation relationships response"
      },
      "ReservationResponseItem": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "type": "string",
            "description": "Id of a reservation",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of a reservation",
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationAttributesResponse"
              }
            ],
            "description": "Attributes of reservation",
            "nullable": true
          },
          "relationships": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationRelationshipsResponse"
              }
            ],
            "description": "Relationships of reservation",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Reservation response"
      },
      "SlotTypeStatResponseItem": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "number",
            "description": "Depth of slot in centimeters",
            "format": "double",
            "example": 61
          },
          "height": {
            "type": "number",
            "description": "Height of slot in centimeters",
            "format": "double",
            "example": 8.5
          },
          "width": {
            "type": "number",
            "description": "Width of slot in centimeters",
            "format": "double",
            "example": 44
          },
          "count": {
            "type": "integer",
            "description": "Count of slots of given type",
            "format": "int32",
            "example": 36
          },
          "type": {
            "type": "string",
            "description": "Type name",
            "nullable": true,
            "example": "Extra Small"
          },
          "slotId": {
            "type": "integer",
            "description": "Slot type id",
            "format": "int32",
            "example": 1
          }
        },
        "additionalProperties": false,
        "description": "Slot types"
      },
      "UpdateReservationAttributes": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of a reservation",
            "nullable": true
          },
          "expiration_date": {
            "type": "string",
            "description": "Expiration date in UTC",
            "format": "date-time",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateReservationPackage"
            },
            "description": "Packages",
            "nullable": true
          },
          "paymentData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPaymentData"
              }
            ],
            "description": "Payment information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Attributes of reservation to update"
      },
      "UpdateReservationBodyInputV1": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateReservationData"
              }
            ],
            "description": "Update reservation input data",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Input for a reservation updating"
      },
      "UpdateReservationData": {
        "type": "object",
        "properties": {
          "reservation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateReservationItem"
              }
            ],
            "description": "Reservation data to update",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update reservation data"
      },
      "UpdateReservationErrorResponse": {
        "type": "object",
        "properties": {
          "data": {
            "description": "Data placeholder",
            "default": null,
            "nullable": true
          },
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Error response for update reservation"
      },
      "UpdateReservationItem": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "type": "string",
            "description": "Id of a reservation",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Type of a reservation",
            "readOnly": true
          },
          "attributes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateReservationAttributes"
              }
            ],
            "description": "Attributes of a reservation to update",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Reservation information to update"
      },
      "UpdateReservationPackage": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "number",
            "description": "Depth of a package in centimeters",
            "format": "double",
            "nullable": true
          },
          "height": {
            "type": "number",
            "description": "Height of a package in centimeters",
            "format": "double",
            "nullable": true
          },
          "width": {
            "type": "number",
            "description": "Width of a package in centimeters",
            "format": "double",
            "nullable": true
          },
          "barCode": {
            "maxLength": 200,
            "type": "string",
            "description": "BarCode of a package",
            "nullable": true
          },
          "shippingList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationPackageShippingList"
              }
            ],
            "description": "Shipping list",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Package information for updating a reservation"
      },
      "UpdateReservationResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "description": "Metadata information",
            "default": null,
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorResponseItem"
            },
            "description": "Errors information",
            "default": null,
            "nullable": true
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReservationResponseItem"
              }
            ],
            "description": "Useful data"
          }
        },
        "additionalProperties": false,
        "description": "Response for update reservation"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "password": {
            "tokenUrl": "https://identitymanagement.phoenix.alza.cz/connect/token",
            "scopes": {
              "konzole_access": "Konzole API"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ParcelLockers",
      "description": "Controller with endpoints for ParcelLockers partners"
    },
    {
      "name": "ParcelLockersFeed",
      "description": "Controller with endpoints for ParcelLockers feeds"
    }
  ]
}
